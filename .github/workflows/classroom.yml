name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
  BUILD_CONFIGURATION: Debug
  APP_PATH: /home/${{ secrets.SSH_USER_NAME }}/lab2

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker images
      env:
        BUILD_CONFIGURATION: ${{ env.BUILD_CONFIGURATION }}
      run: |
        docker compose build
        docker compose push

  deploy:
    needs: publish
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Clear app directory
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER_NAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASS }}
        port: 22
        script: |
          rm -rf ${{ env.APP_PATH }}
          mkdir -p ${{ env.APP_PATH }}

    - name: Copy docker-compose file
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER_NAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASS }}
        port: 22
        source: ./docker-compose.yml
        target: ${{ env.APP_PATH }}

    - name: Copy postgres configs
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER_NAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASS }}
        port: 22
        source: ./postgres
        target: ${{ env.APP_PATH }}

    - name: Start container
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER_NAME }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASS }}
        port: 22
        script: |
          cd ${{ env.APP_PATH }}
          docker compose down --rmi all
          docker compose up -d

  Autograding:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          # TODO insert your variant
          collection: v4/postman/collection.json
          environment: v4/postman/environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - uses: education/autograding@v1
        id: autograder
        continue-on-error: true

      - name: Github auto grader mark
        uses: Romanow/google-sheet-autograder-marker@v1.0
        with:
          google_token: ${{secrets.GOOGLE_API_KEY}}
          sheet_id: "1xkgjUX6Qmk7rdJG-QPOToav-HWWtthJjnShIKnw3oIY"
          homework_number: 2
          user_column: 'D'
          column_offset: 'F'
          mark: "'+"

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: docker compose down -v