// <auto-generated />
using System;
using LibraryService.Storage.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LibraryService.Storage.Migrations
{
    [DbContext(typeof(PostgresContext))]
    [Migration("20240924122927_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LibraryService.Common.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("BookUid")
                        .HasColumnType("uuid");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Бьерн Страуструп",
                            BookUid = new Guid("f7cdc58f-2caf-4b15-9727-f89dcc629b27"),
                            Condition = "EXCELLENT",
                            Genre = "Научная фантастика",
                            Name = "Краткий курс C++ в 7 томах"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Какой-то хер",
                            BookUid = new Guid("4b069a85-fb1c-4830-ae46-8bf96eeda096"),
                            Condition = "BAD",
                            Genre = "Ужас",
                            Name = "Отсутствующая книга"
                        });
                });

            modelBuilder.Entity("LibraryService.Common.Models.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("LibraryUid")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Libraries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "2-я Бауманская ул., д.5, стр.1",
                            City = "Москва",
                            LibraryUid = new Guid("83575e12-7ce0-48ee-9931-51919ff3c9ee"),
                            Name = "Библиотека имени 7 Непьющих"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Ешё дальше",
                            City = "Далеко",
                            LibraryUid = new Guid("9074f458-2ae8-4d64-9c38-d67aa7d551a3"),
                            Name = "Тут ничего нету"
                        });
                });

            modelBuilder.Entity("LibraryService.Common.Models.LibraryBooks", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<int>("LibraryId")
                        .HasColumnType("integer");

                    b.Property<int>("AvailableCount")
                        .HasColumnType("integer");

                    b.HasKey("BookId", "LibraryId");

                    b.HasIndex("LibraryId");

                    b.ToTable("LibraryBooks");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            LibraryId = 1,
                            AvailableCount = 0
                        },
                        new
                        {
                            BookId = 2,
                            LibraryId = 1,
                            AvailableCount = 0
                        },
                        new
                        {
                            BookId = 1,
                            LibraryId = 2,
                            AvailableCount = 0
                        },
                        new
                        {
                            BookId = 2,
                            LibraryId = 2,
                            AvailableCount = 0
                        });
                });

            modelBuilder.Entity("LibraryService.Common.Models.LibraryBooks", b =>
                {
                    b.HasOne("LibraryService.Common.Models.Book", "Book")
                        .WithMany("LibraryBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryService.Common.Models.Library", "Library")
                        .WithMany("LibraryBooks")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Library");
                });

            modelBuilder.Entity("LibraryService.Common.Models.Book", b =>
                {
                    b.Navigation("LibraryBooks");
                });

            modelBuilder.Entity("LibraryService.Common.Models.Library", b =>
                {
                    b.Navigation("LibraryBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
